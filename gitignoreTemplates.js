// 通用规则
export const commonRules = `# Common files and directories to ignore
*.log
*.tmp
*.temp
.cache/
.temp/

# Backup files
*.bak
*.backup
*~

# System files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Miscellaneous
*.zip
*.tar.gz
*.rar
*.7z`;

// 编程语言
const languageTemplates = {
  javascript: `# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
.pnpm-store/

# Production builds
/dist/
/build/

# Coverage directory
/coverage/

# Debug logs
logs
*.log`,

  python: `# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
*.manifest
*.spec

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/`,

  java: `# Compiled class files
*.class

# Log files
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# Virtual machine crash logs
hs_err_pid*

# Maven
target/
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties
.mvn/timing.properties
.mvn/wrapper/maven-wrapper.jar

# Gradle
.gradle
**/build/
!src/**/build/
gradle-app.setting
!gradle-wrapper.jar
!gradle-wrapper.properties
!gradle/wrapper/gradle-wrapper.jar`,

  csharp: `# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio files
.vs/
*.user
*.userosscache
*.sln.docstates
*.userprefs

# ReSharper
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user`,

  cpp: `# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

# Build directories
build/
Debug/
Release/`,

  go: `# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with 'go test -c'
*.test

# Output of the go coverage tool
*.out

# Dependency directories
/vendor/
/go.sum

# Go workspace file
go.work`,

  rust: `# Generated by Cargo
/target/
Cargo.lock

# Remove Cargo.lock from gitignore if creating an executable
# instead of a library

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these
*.pdb`,

  php: `# Composer dependencies
/vendor/
composer.phar
composer.lock

# PHPUnit
/phpunit.xml
.phpunit.result.cache

# PHP CS Fixer
.php_cs.cache
.php-cs-fixer.cache

# PHPStorm
.idea/`,

  ruby: `# Gem dependencies
/vendor/bundle/
/.bundle/

# Test coverage
/coverage/

# Documentation
/doc/
/rdoc/

# Environment
.env
.env.*

# Logs
/log/*
!/log/.keep
/tmp`,

  swift: `# Xcode
xcuserdata/
*.xcscmblueprint
*.xccheckout
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

# Swift Package Manager
.build/
.swiftpm/`,

  kotlin: `# Gradle files
.gradle/
build/

# Local configuration file
local.properties

# Android Studio
*.iml
.idea/
/captures/
.externalNativeBuild/
.cxx/

# Kotlin-specific
*.kotlin_module`,

  typescript: `# TypeScript
*.tsbuildinfo
/dist/
/lib/
/out/

# Type definitions
*.d.ts.map

# Coverage
/coverage/`
};

// 前端框架
const frontendTemplates = {
  react: `# React build
/build/
/dist/

# Testing
/coverage/

# React specific
.env.local
.env.development.local
.env.test.local
.env.production.local`,

  vue: `# Vue build
/dist/
/dist-ssr/

# Vue specific
.env.local
.env.*.local

# npm/yarn debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*`,

  angular: `# Angular
/dist/
/tmp/
/out-tsc/
/bazel-out/

# Node
/node_modules/
npm-debug.log
yarn-error.log

# IDEs and editors
.idea/
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace`,

  svelte: `# Svelte build
/public/build/

# Node modules
/node_modules/

# Environment
.env
.env.*
!.env.example`,

  nextjs: `# Next.js
/.next/
/out/

# Production
/build/

# Debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Local env files
.env*.local`,

  nuxtjs: `# Nuxt
.nuxt/
dist/

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
.env
.env.*`,

  gatsby: `# Gatsby
.cache/
public/
src/gatsby-types.d.ts

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*`,

  webpack: `# Webpack
/dist/
/build/

# Source maps
*.map`,

  vite: `# Vite
/dist/
/dist-ssr/
*.local

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*`,

  parcel: `# Parcel
.parcel-cache/
dist/
.cache/`
};

// 后端框架
const backendTemplates = {
  nodejs: `# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock`,

  django: `# Django
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal
media/

# Django static files
/static/
/staticfiles/`,

  flask: `# Flask
instance/
.webassets-cache/

# SQLite databases
*.sqlite
*.sqlite3

# Virtual environment
venv/
ENV/`,

  spring: `# Spring Boot
HELP.md
target/
!.mvn/wrapper/maven-wrapper.jar
!**/src/main/**/target/
!**/src/test/**/target/

# STS
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache`,

  express: `# Express
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment
.env
.env.local`,

  fastapi: `# FastAPI
__pycache__/
*.py[cod]

# Environment
.env
.venv/
env/
venv/`,

  rails: `# Rails
*.rbc
capybara-*.html
.rspec
/db/*.sqlite3
/db/*.sqlite3-journal
/public/system
/coverage/
/spec/tmp
*.orig
rerun.txt
pickle-email-*.html`,

  laravel: `# Laravel
/node_modules
/public/hot
/public/storage
/storage/*.key
/vendor
.env
.env.backup
.phpunit.result.cache
Homestead.json
Homestead.yaml
npm-debug.log
yarn-error.log`,

  aspnet: `# ASP.NET
## User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

## Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/`
};

// 移动开发
const mobileTemplates = {
  android: `# Android Studio
*.iml
.gradle/
/local.properties
/.idea/
.DS_Store
/build/
/captures/
.externalNativeBuild/
.cxx/`,

  ios: `# Xcode
xcuserdata/
*.xcscmblueprint
*.xccheckout
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3`,

  reactnative: `# React Native
/ios/Pods/
/ios/build/
/android/app/build/
/android/.gradle/
/android/local.properties

# Expo
.expo/
web-build/`,

  flutter: `# Flutter/Dart
**/doc/api/
**/ios/Flutter/.last_build_id
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
.packages
.pub-cache/
.pub/
/build/
/ios/Pods/`,

  xamarin: `# Xamarin
bin/
obj/
.vs/
*.userprefs
*.user
*.suo
Resource.designer.cs`,

  ionic: `# Ionic
/www/
/platforms/
/plugins/
/resources/ios/
/resources/android/`,

  cordova: `# Cordova
/platforms/
/plugins/
/www/
/res/`
};

// 数据库
const databaseTemplates = {
  mysql: `# MySQL
*.sql
*.sqlite
*.sqlite3
*.db
*.mdb`,

  postgresql: `# PostgreSQL
*.sql
*.sqlite
*.sqlite3
*.db
pg_data/`,

  mongodb: `# MongoDB
/data/
/data/db/
*.mongodb
mongod.lock`,

  redis: `# Redis
*.rdb
redis-debug.log
redis.log`,

  sqlite: `# SQLite
*.db
*.sqlite
*.sqlite3
*.db-shm
*.db-wal`,

  oracle: `# Oracle
*.dbf
*.ora
*.log
*.ctl`,

  elasticsearch: `# Elasticsearch
/data/
/logs/
elasticsearch.yml
.elasticsearch/`
};

// 操作系统
const osTemplates = {
  windows: `# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msm
*.msp
*.lnk`,

  macos: `# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent`,

  linux: `# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*`
};

// IDE/编辑器
const ideTemplates = {
  vscode: `# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace
.history/`,

  intellij: `# IntelliJ IDEA
.idea/
*.iml
*.iws
*.ipr
out/
.idea_modules/`,

  eclipse: `# Eclipse
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders`,

  xcode: `# Xcode
xcuserdata/
*.xcscmblueprint
*.xccheckout
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3`,

  androidstudio: `# Android Studio
*.iml
.gradle
/local.properties
/.idea/
.DS_Store
/build
/captures
.externalNativeBuild
.cxx`,

  vim: `# Vim
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]
Session.vim
Sessionx.vim
.netrwhist
*~
tags
[._]*.un~`,

  emacs: `# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*
.org-id-locations
*_archive
*_flymake.*
/eshell/history
/eshell/lastdir
/elpa/
*.rel
/auto/
.cask/
dist/
flycheck_*.el
/server/
.projectile
.dir-locals.el`
};

// 合并所有模板
export const gitignoreTemplates = {
  ...languageTemplates,
  ...frontendTemplates,
  ...backendTemplates,
  ...mobileTemplates,
  ...databaseTemplates,
  ...osTemplates,
  ...ideTemplates
}; 